#!/bin/bash

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
EXEDIR="$SCRIPT_DIR/.."
EXE=paintown

APPVERSION_TAG=`git tag --sort=-committerdate | head -n 1`
APPVERSION_COMMIT=`git log --format=%h -n 1`

# Regular expression to match 'v' followed by a number version
TAG_VERSION_REGEX='^v[0-9]+\.[0-9]+'

# Check if the variable matches the regular expression
if [[ $APPVERSION_TAG =~ $TAG_VERSION_REGEX ]]; then
    APPVERSION=$APPVERSION_TAG
else
    APPVERSION=$APPVERSION_COMMIT
fi

# inside tmp
cd $SCRIPT_DIR
rm -rf tmp && mkdir tmp && cd tmp

# .app
# Setup
APPDIR=Paintown.app
mkdir -p $APPDIR/Contents/MacOS $APPDIR/Contents/Resources $APPDIR/Contents/Frameworks
cp $EXEDIR/$EXE $APPDIR/Contents/MacOS
cp $EXEDIR/misc/icon.png $APPDIR/Contents/Resources/AppIcon.png

# plist
echo "<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleExecutable</key>
    <string>paintown</string>
    <key>CFBundleInfoDictionaryVersion</key>
    <string>6.0</string>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
    <key>CFBundleSignature</key>
    <string>????</string>
    <key>CFBundleVersion</key>
    <string>$APPVERSION</string>
    <key>CFBundleDocumentTypes</key>
    <array>
        <dict>
            <key>CFBundleTypeExtensions</key>
            <array>
                <string>*</string>
            </array>
            <key>CFBundleTypeName</key>
            <string>NSStringPboardType</string>
            <key>CFBundleTypeOSTypes</key>
            <array>
                <string>****</string>
            </array>
            <key>CFBundleTypeRole</key>
            <string>Viewer</string>
        </dict>
    </array>
    <key>CFBundleGetInfoString</key>
    <string>Paintown</string>
    <key>CFBundleIconFile</key>
    <string>AppIcon</string>
    <key>CFBundleName</key>
    <string>Paintown</string>
</dict>
</plist>" > $APPDIR/Contents/Info.plist

echo "Before"
otool -L $EXEDIR/$EXE

# grab all shared libraries
ALL_EXE_SHARED_LIBRARIES=`otool -L $EXEDIR/$EXE | awk '{print $1}' | grep -e opt -e libz | grep -v ':' | sed 's/^[[:space:]]*//'`

# for each dep change from rpath to executable_path
while IFS= read -r line; do

    if [[ $line == *"dylib"* ]]; then
            dylibpath=`echo "$line" | awk '{print $1}'`

            if [ -f "$dylibpath" ]; then
                dylibname=`basename $dylibpath`

                # copy dylib
                cp "$dylibpath" $APPDIR/Contents/Frameworks

                # changing $dylibname
                install_name_tool -change $dylibpath "@executable_path/../Frameworks/$dylibname" $EXE
            else
                echo "Couldn't copy the file $dylibpath"
            fi
    fi

done <<< "$ALL_EXE_SHARED_LIBRARIES"

echo "After"
otool -L $APPDIR/Contents/MacOS/$EXE
file $APPDIR/Contents/MacOS/$EXE

# launcher
echo '#!/bin/bash
cd "`dirname "$0"`"
open Paintown.app --args -d "`pwd`/data"' > run.command
chmod +x run.command

# DMG
DMG_DIR=dmg
mkdir $DMG_DIR
mv $APPDIR run.command $DMG_DIR
cp -r $EXEDIR/data $DMG_DIR

ARCH=`uname -m`
hdiutil create -size 500m -fs APFS -volname "Paintown $APPVERSION" -srcfolder $DMG_DIR -format SPARSE "paintown-$ARCH.dmg"

pwd
# executable
mv paintown-$ARCH.dmg* $EXEDIR
