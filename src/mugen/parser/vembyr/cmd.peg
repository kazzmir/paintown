start-symbol: start
options: debug0
module: Mugen.Cmd
rules:
	start = whitespace newline* (line whitespace line_end)* <eof>
	line = s comment
	     | s section
	     | s assignment
	     | space+
	line_end = newline+
	         | &<eof> <void>
	newline = "\n"
	        | "\r"
	whitespace = sw*
	sw = space
	   | comment
	s = space*
	space = " "
	      | "\t"
	comment = ";" (!"\n" .)*
	        | "=" (!"\n" .)*
		| "-" "-"+
	section = "[" s (!"]" .)+ "]"
	assignment = identifier s "=" s expr
	           | identifier s "(" s integer s ")" s "=" s expr
	identifier = name ("." name)*
	integer = sign? digit+
	string = <quote> (!<quote> !"\n" .)* <quote>
	float = sign? digit* "." digit+
	      | sign? digit+ "."
	sign = "-"
	     | "+"
	range = "[" s valuelist s "]"
	      | "(" s valuelist s ")"
	      | "(" s valuelist s "]"
	      | "[" s valuelist s ")"
	name = letter alpha_digit*
	inline letter = [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]
	alpha_digit = letter
	            | digit
	digit = [0123456789]
	
	valuelist = expr_c (s "," s expr_c)*
	          | s "," s expr_c ("," s expr_c)*

	expr = expr_c !(s ",")
	     | valuelist
	expr_c = expr2 expr_rest
	       # I dont think this is right
	       | expr2_rest
	
	expr2 = expr3 expr2_rest
	expr3 = expr4 expr3_rest
	expr4 = expr5 expr4_rest
	expr5 = expr6 expr5_rest
	expr6 = expr7 expr6_rest
	expr7 = expr8 expr7_rest
	expr8 = expr9 expr8_rest
	expr9 = expr10 expr9_rest
	expr10 = expr11 expr10_rest
	expr11 = expr12 expr11_rest
	expr12 = expr13 expr12_rest
	expr13 = unary* expr13_real

	expr_rest = s "||" s expr2 expr_rest
	          | <void>
	expr2_rest = s "^^" s expr3 expr2_rest
	           | <void>
	expr3_rest = s "&&" s expr4 expr3_rest
	           | <void>
	expr4_rest = s "|" s expr5 expr4_rest
	           | <void>
	expr5_rest = s "^" s expr6 expr5_rest
	           | <void>
	expr6_rest = s "&" s expr7 expr6_rest
	           | <void>
	expr7_rest = s ":=" s expr8 expr7_rest
	           | <void>
	# todo: fix expr8_rest
	expr8_rest = s "=" s expr9 expr8_rest
	           | s "!=" s expr9 expr8_rest
		   # todo: intervals
	           | <void>
	expr9_rest = s compare s expr10 expr9_rest
	           | <void>
	compare = "<="
		| ">="
		| "<"
	        | ">"
	all_compare = compare
	            | "="
		    | "!="
	expr10_rest = s "+" s expr11 expr10_rest
	            | s "-" s expr11 expr10_rest
		    | <void>
	expr11_rest = s "*" s expr12 expr11_rest
	            | s "/" s expr12 expr11_rest
	            | s "%" s expr12 expr11_rest
		    | <void>
	expr12_rest = s "**" s expr13 expr12_rest
	            | <void>
	unary = "!"
	      | "-"
	      | "~" !key !digit
	expr13_real = function
	      | value
	      | "(" s expr s ")"
        function = "abs"{case} s "(" s expr s ")"
	         | "const"{case} s "(" s expr s ")"
		 | "selfanimexist"{case} s "(" s expr s ")"
		 | "ifelse"{case} s "(" s expr_c s "," s expr_c s "," s expr_c s ")"
		 | "gethitvar"{case} s "(" s expr_c s ")"
		 | "floor"{case} s "(" s expr_c s ")"
		 | "ceil"{case} s "(" s expr_c s ")"
		 | "sysvar"{case} s "(" s integer s ")"
		 | "var"{case} s "(" s integer s ")"
		 | "numexplod"{case} s "(" s integer s ")"
		 | "numhelper"{case} s "(" s integer s ")"
		 | "numprojid"{case} s "(" s integer s ")"
		 | "helper"{case} s "(" s integer s ")"
		 | "fvar"{case} s "(" s integer s ")"
		 | "target"{case} s "(" s integer s ")"
		 | "ishelper"{case} s "(" s integer s ")"
		 | "animelemtime"{case} s "(" s integer s ")"
		 | "animelemno"{case} s "(" s expr_c s ")"
		 | "animexist"{case} s "(" s expr_c s ")"
		 | "projguarded"{case} s "(" s expr_c s ")"
		 | "projcontact"{case} s "=" s integer function_rest
		 | "animelem"{case} s "=" s integer function_rest
		 | "numhelper"{case} s "(" s expr_c s ")"
		 | "helper"{case} s "(" s expr_c s ")"
	function_rest = s "," s all_compare s integer

	key = key_real key_rest
	key_rest = s "+" key_real key_rest
	         | <void>
	key_real = key_modifier* key_name
	key_modifier = "~" digit*
	             | "$"
		     | "/"
		     | ">"
	key_name = "DB"
		 | "B"
		 | "DF"
		 | "D"
		 | "F"
		 | "UF"
		 | "UB"
		 | "U"
		 | "a"
		 | "b"
		 | "c"
		 | "x"
		 | "y"
		 | "z"
		 | "s"

	value = float
	      | integer
	      | keyword
	      | !keyword identifier
	      | range
	      | string
	      | key
	
	keyword = keyword_real !alpha_digit
	keyword_real = "vel"{case} s "y"{case}
	             | "vel"{case} s "x"{case}
	             | "pos"{case} s "y"{case}
	             | "pos"{case} s "x"{case}
	             | "p2dist"{case} s "x"{case}
	             | "p2dist"{case} s "y"{case}
	             | "p1dist"{case} s "x"{case}
	             | "p1dist"{case} s "y"{case}
	             | "p2bodydist"{case} s "x"{case}
	             | "p2bodydist"{case} s "y"{case}
	             | "p1bodydist"{case} s "x"{case}
	             | "p1bodydist"{case} s "y"{case}
